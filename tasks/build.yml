---

- name: Install New Relic dependencies
  become: yes
  apt:
    pkg: "{{ item }}"
    state: present
  retries: 2
  register: apt_result
  until: apt_result is succeeded
  with_items:
    - apt-transport-https
    - apt-utils

- name: Download New Relic Infra PGP key (works with Bionic behind a proxy)
  become: yes
  get_url:
    dest: /usr/local/src/newrelic_infra.asc
    mode: 0644
    url: "https://{{ sansible_newrelic_integration_infra_apt_repo_keyserver }}/pks/lookup?op=get&search=0x{{ sansible_newrelic_integration_infra_apt_key }}"
  retries: 2
  register: apt_result
  until: apt_result is succeeded

- name: Ensures New Relic Infra PGP key is known
  become: yes
  apt_key:
    file: /usr/local/src/newrelic_infra.asc
    id: "{{ sansible_newrelic_integration_infra_apt_key }}"
    state: present

- name: Add New Relic APT repository
  become: yes
  apt_repository:
    repo: "{{ sansible_newrelic_integration_infra_apt_repo }}"
    update_cache: yes

- name: Install New Relic Infra
  become: yes
  apt:
    pkg: "newrelic-infra={{ sansible_newrelic_integration_infra_version }}"
    state: present
  retries: 2
  register: apt_result
  until: apt_result is succeeded

- name: Ensure New Relic Infra log directory exists
  become: yes
  file:
    group: "{{ sansible_newrelic_integration_infra_group }}"
    owner: "{{ sansible_newrelic_integration_infra_user }}"
    path: /var/log/newrelic
    state: directory

- name: Ensure New Relic service is disabled
  become: yes
  service:
    daemon_reload: "{{ (ansible_service_mgr == 'systemd') | ternary('yes', omit) }}"
    enabled: no
    name: newrelic-infra
